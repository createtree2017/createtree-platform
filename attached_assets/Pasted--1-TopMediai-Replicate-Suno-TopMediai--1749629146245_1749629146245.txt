## 🛠️ 1단계 ‑ TopMediai 구조 전환 *라플 작업지시서*

> **목표** : Replicate/Suno 분기를 제거하고 TopMediai 전용 구조로 리팩토링하며, 필요한 필드·키·모듈을 사전 정리한다.

---

### 1. 삭제(또는 백업) 대상

| 경로                                | 조치                   | 사유                            |
| --------------------------------- | -------------------- | ----------------------------- |
| `server/services/suno-service.ts` | **삭제**               | 더 이상 사용하지 않는 Puppeteer 자동화 코드 |
| `server/routes/suno-routes.ts`    | **삭제**               | Suno 전용 API 엔드포인트 불필요         |
| `client/src/pages/suno-music.tsx` | **삭제**               | Suno UI 페이지 제거                |
| `server/services/replicate.ts`    | **backup/** 디렉터리로 이동 | 추후 연구용 보관, 런타임 호출 금지          |

> ```bash
> # 예시 명령
> mv server/services/replicate.ts backup/replicate.ts.bak
> rm server/services/suno-service.ts server/routes/suno-routes.ts client/src/pages/suno-music.tsx
> ```

---

### 2. 수정 대상 파일

| 경로                                          | 핵심 변경 점                                                                                                                                                                             |
| ------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `shared/schema.ts`                          | `music` 테이블에 **provider, credit\_used, status, hospital\_id** 필드 추가                                                                                                                 |
| `server/services/music-service.ts`          | <br>1️⃣ 기존 Suno/Replicate 분기 **전부 주석처리**<br>2️⃣ `provider === 'topmedia'` 로직 추가<br>3️⃣ TopMedia 호출 함수(`generateTopMediaMusic`) 사용<br>4️⃣ 응답값에 `provider`, `creditUsed`, `status` 저장 |
| `client/src/components/music/MusicForm.tsx` | <br>• `provider` hidden input 값 `topmedia` 고정<br>• 스타일·가사 필드 → TopMedia 파라미터 이름 맞춰 전송                                                                                               |
| `client/src/pages/music.tsx`                | 메뉴/라우팅에서 Suno 옵션 제거                                                                                                                                                                 |
| `.env` `replit.secrets`                     | `TOPMEDIA_API_KEY=your_key_here` 추가                                                                                                                                                 |

---

### 3. 신규 파일 생성

| 파일                                    | 내용                                      |
| ------------------------------------- | --------------------------------------- |
| `server/services/topmedia-service.ts` | TopMediai REST 호출 래퍼 (POST `/v1/music`) |

> 기본 스켈레톤:
>
> ```ts
> import axios from "axios";
>
> export async function generateTopMediaMusic(params:{
>   title:string; prompt:string; lyrics?:string; instrumental:boolean;
> }){
>   const { data } = await axios.post("https://api.topmedia.ai/v1/music", params, {
>     headers:{ "x-api-key": process.env.TOPMEDIA_API_KEY! }
>   });
>   return data; // { url, duration, ... }
> }
> ```

---

### 4. GCS 업로드 TODO (주석 삽입)

* `music-service.ts` 내부 **// TODO: uploadToGCS(audioUrl)** 위치 표시
* 이후 4단계에서 `gcsUploader.uploadAudio()` 구현 예정

---

### 5. 테스트 체크리스트

1. **`npm run dev`** 재시작 → 컴파일 오류 없을 것
2. POST `/api/music/generate` → TopMedia 응답 OK
3. DB `music` 레코드 → `provider='topmedia'`, `status='done'` 저장 확인
4. 병원 관리자로 로그인 → 자기 병원 음악만 조회

---

### 6. 순서 요약 (라플 실행 커맨드)

1. ▼ 삭제/백업 명령 실행
2. ▼ `topmedia-service.ts` 생성 후 코드 삽입
3. ▼ `music-service.ts` 수정 (분기 및 TODO 포함)
4. ▼ 프론트엔드 폼/페이지 수정
5. ▼ `.env`에 `TOPMEDIA_API_KEY` 입력
6. `npm run dev` → 테스트 시나리오 수행

> ⚠️ **모든 커밋 전 `prettier --write` 실행**하여 코딩컨벤션 준수
