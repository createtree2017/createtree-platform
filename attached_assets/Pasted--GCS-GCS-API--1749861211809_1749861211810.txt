// 🎯 라플 작업지시서: GCS 기반 음악 스트리밍 구조 재설계

// ✅ 목적: 음악이 GCS 또는 로컬에 저장되어 있을 경우, 안정적으로 재생 가능한 스트리밍 API 구현
// ❌ 금지사항: static 폴더로 하드코딩 이동, HTML 페이지를 mp3로 저장, 필터링으로 오류 은폐

import express from 'express';
import { db } from '../db';
import { music } from '../db/schema';
import { eq } from 'drizzle-orm';
import fs from 'fs';
import path from 'path';

const router = express.Router();

router.get('/api/music/stream/:id', async (req, res) => {
  const { id } = req.params;
  const range = req.headers.range || 'bytes=0-';

  const found = await db.select().from(music).where(eq(music.id, Number(id))).limit(1);
  if (!found.length) return res.status(404).send('Music not found');

  const musicData = found[0];
  const musicUrl = musicData.url;

  // ✅ 로컬 파일인 경우 (e.g. /static/music/abc.mp3)
  if (musicUrl.startsWith('/static/')) {
    const filePath = path.join(process.cwd(), musicUrl);
    if (!fs.existsSync(filePath)) return res.status(404).send('Local file not found');

    const stat = fs.statSync(filePath);
    const fileSize = stat.size;
    const start = Number(range.replace(/bytes=/, '').split('-')[0]);
    const end = fileSize - 1;
    const chunkSize = end - start + 1;

    const stream = fs.createReadStream(filePath, { start, end });
    res.writeHead(206, {
      'Content-Range': `bytes ${start}-${end}/${fileSize}`,
      'Accept-Ranges': 'bytes',
      'Content-Length': chunkSize,
      'Content-Type': 'audio/mpeg',
    });
    stream.pipe(res);
    return;
  }

  // ✅ GCS URL인 경우 (Signed URL 또는 Public URL)
  try {
    const gcsRes = await fetch(musicUrl, {
      headers: { Range: range },
    });

    const contentType = gcsRes.headers.get('Content-Type') || '';
    if (!gcsRes.ok || !gcsRes.body || !contentType.includes('audio')) {
      return res.status(502).send('Invalid audio file or fetch failed');
    }

    for (const [key, value] of gcsRes.headers.entries()) {
      res.setHeader(key, value);
    }
    res.status(gcsRes.status);
    gcsRes.body.pipe(res);
  } catch (err) {
    console.error('GCS fetch error:', err);
    res.status(500).send('Stream error');
  }
});

export default router;

// ✅ 적용 시 주의사항:
// 1. music.url 필드는 절대 하드코딩된 static 경로로 덮어쓰지 말 것
// 2. GCS는 반드시 퍼블릭 URL 또는 Signed URL이어야 함
// 3. HTML을 mp3처럼 저장하거나, 인증 실패 페이지 저장은 즉시 제거할 것
// 4. 브라우저에서 테스트 시 206 응답 + audio/mpeg + Range 헤더 필수
