✅ Step 5. [회원 등급 수동 변경 기능 + 권한 구조 보완] 작업지시서

🎯 작업 목표 요약:
1. /admin/users/:id/role API 생성 - 회원 등급(memberType) 수동 변경 기능
2. 등급별 권한 제한 적용 (본인보다 높은 등급은 수정 불가)
3. 전체 보호 라우트 구조 재검토 - 경로 명과 역할 일치화
4. 누락된 미들웨어 및 병원 자원 보호 조건 점검·적용

---

🔖 회원 등급 설명 (memberType 기준)
- superadmin (창조AI 대표): 모든 병원/회원/콘텐츠 개입 가능, 관리자 등급 수정 가능
- admin (창조AI 직원): 모든 병원/회원/콘텐츠 개입 가능 (단, 관리자 등급 수정 불가)
- hospital_admin: 본인 병원 자원만 관리 가능
- membership: 유료 병원 고객 (기능 무제한)
- pro: 유료 개인 회원 (기능 무제한)
- general: 무료 사용자 (기능 일부 제한)

---

✅ 1. 등급 변경 API 생성
PATCH /admin/users/:id/role
Body:
{
  "memberType": "pro" | "membership" | "hospital_admin" | "admin" | "superadmin"
}

---

✅ 2. 권한 체크 로직 구현 예시 (admin 제한 포함)

requireAdminOrSuperAdmin(req, res, next);

if (req.user.memberType === 'admin') {
  const forbidden = ['admin', 'superadmin'];
  if (forbidden.includes(targetUser.memberType)) {
    return res.status(403).json({ error: "이 등급은 수정할 수 없습니다." });
  }
  if (forbidden.includes(newMemberType)) {
    return res.status(403).json({ error: "이 등급으로 변경할 수 없습니다." });
  }
}

---

✅ 3. 응답 예시
{
  "success": true,
  "message": "회원 등급이 변경되었습니다.",
  "data": {
    "userId": 102,
    "newMemberType": "hospital_admin"
  }
}

---

⚠️ 4. 권한 구조 보완 필수 항목 (강제 적용 지시)

A. /admin/** vs /hospital/** 경로 분리
- /admin/** → superadmin 또는 admin만 접근
- /hospital/** → hospital_admin 전용
- 예시 오류: router.get('/admin/campaign-applications', requireHospitalAdmin, ...) ❌

B. 관리자 보호 라우트에 requireAdminOrSuperAdmin 미들웨어 누락 여부 전수 확인
- JWT 없이 접근 시 401
- 관리자 외 접근 시 403

C. 병원 자원 보호 조건 점검
- 모든 병원 관리자용 라우트에서 다음 조건 필수:
  if (resource.hospitalId !== req.user.hospitalId) {
    return res.status(403).json({ error: "병원 권한이 없습니다" });
  }

D. 인증 미들웨어 누락 전수 점검
- requireAuth 또는 requireHospitalAdmin이 누락된 라우트가 있는지 routes.ts 전체 검사 후 보완

---

📌 완료 검증 체크리스트
- 일반 관리자가 superadmin 등급 수정 시도 → 403 반환
- hospital_admin이 /admin/** 접근 → 403 반환
- 병원관리자가 타 병원 자원 접근 → 403 반환
- 모든 보호 라우트 → JWT 없이 접근 시 401 반환
- 등급 수정 API → PATCH 동작, memberType 변경됨
